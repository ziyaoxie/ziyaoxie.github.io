<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术文章 on 提笔忘字</title><link>https://imx.ink/tech/</link><description>Recent content in 技术文章 on 提笔忘字</description><generator>Hugo</generator><language>zh-CN</language><copyright>Copyright © 2023, Xie Ziyao.</copyright><lastBuildDate>Wed, 05 Jun 2024 18:00:00 +0800</lastBuildDate><atom:link href="https://imx.ink/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Vim 快捷键</title><link>https://imx.ink/tech/2024/06/05/vim-shortcuts/</link><pubDate>Wed, 05 Jun 2024 18:00:00 +0800</pubDate><guid>https://imx.ink/tech/2024/06/05/vim-shortcuts/</guid><description>&lt;h2 id="vim-快捷键">Vim 快捷键&lt;/h2>
&lt;h3 id="方向键">方向键&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>0&lt;/code>&lt;/td>
 &lt;td>（数字 0）移动光标至本行开头&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>$&lt;/code>&lt;/td>
 &lt;td>移动光标至本行末尾&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>:0&lt;/code>&lt;/td>
 &lt;td>（数字 0）移动光标至文件开头&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>:$&lt;/code>&lt;/td>
 &lt;td>移动光标至文件末尾&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="删除文本">删除文本&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>x&lt;/code>&lt;/td>
 &lt;td>删除光标处字符&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>dw&lt;/code>&lt;/td>
 &lt;td>删除一个词&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>dd&lt;/code>&lt;/td>
 &lt;td>删除该行&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="复制粘贴文本">复制/粘贴文本&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>yy&lt;/code>&lt;/td>
 &lt;td>复制当前行至存储缓冲区&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>p&lt;/code>&lt;/td>
 &lt;td>在当前行之后粘贴存储缓冲区中的内容&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="撤销重做操作">撤销/重做操作&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>u&lt;/code>&lt;/td>
 &lt;td>撤销最后的操作&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>Ctrl+r&lt;/code>&lt;/td>
 &lt;td>重做最后撤销的操作&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="搜索和替换">搜索和替换&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>?search_text&lt;/code>&lt;/td>
 &lt;td>检索文档，在文档前面的部分搜索 search_text&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>n&lt;/code>&lt;/td>
 &lt;td>移动到后一个检索结果&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>N&lt;/code>&lt;/td>
 &lt;td>移动到前一个检索结果&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>:/original/replacement&lt;/code>&lt;/td>
 &lt;td>检索并将本行的 “original” 替换为 “replacement”&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>:%s/original/replacement/g&lt;/code>&lt;/td>
 &lt;td>检索并将所有的 “original” 替换为 “replacement”&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="书签">书签&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>m{a-zA-Z}&lt;/code>&lt;/td>
 &lt;td>在当前光标位置设置书签，书签名可用一个大小写字母（{a-zA-Z}）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>:marks&lt;/code>&lt;/td>
 &lt;td>列出所有书签&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>`{a-zA-Z}&lt;/code>&lt;/td>
 &lt;td>跳转到书签 {a-zA-Z}&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="编程常用">编程常用&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>快捷键&lt;/th>
 &lt;th>功能&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>gd&lt;/code>&lt;/td>
 &lt;td>跳转到局部变量的定义处&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>&amp;gt;&amp;gt;&lt;/code>&lt;/td>
 &lt;td>增加缩进&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>&amp;lt;&amp;lt;&lt;/code>&lt;/td>
 &lt;td>减少缩进&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>数据库事务测试工具</title><link>https://imx.ink/tech/2024/05/11/database-transaction-testing-tools/</link><pubDate>Sat, 11 May 2024 18:00:00 +0800</pubDate><guid>https://imx.ink/tech/2024/05/11/database-transaction-testing-tools/</guid><description>&lt;h2 id="数据库事务测试工具">数据库事务测试工具&lt;/h2>
&lt;p>参考资料：&lt;a href="https://cn.pingcap.com/blog/tag/transaction-frontier-research/">TiDB-事务前沿研究&lt;/a>；&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>分类&lt;/th>
 &lt;th>名称&lt;/th>
 &lt;th>描述&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>事务一致性测试&lt;/td>
 &lt;td>&lt;a href="https://github.com/pingcap/tipocket/tree/master/testcase/bank">Bank&lt;/a>&lt;/td>
 &lt;td>银行测试是模拟一个银行系统中的转账流程。
&lt;br>&lt;br>
在这个测试中，我们创建一系列模拟银行账户，并随时选择两个账户使用事务进行相互转账，一个账户减去一定的金额，另一个账户增加对应的金额，这样的交易不断的并发执行着。在快照隔离下，所有的转账都必须保证每一个时刻所有的账户的总金额是相同的。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>事务一致性测试&lt;/td>
 &lt;td>&lt;a href="https://github.com/anishathalye/porcupine">Porcupine&lt;/a>&lt;/td>
 &lt;td>Porcupine 一个用 Go 实现的线性一致性验证工具。
&lt;br>&lt;br>
是基于 P-compositionality 算法，P-compositionality 算法利用了线性一致性的 Locality 原理，即如果一个调用历史的所有子历史都满足线性一致性，那么这个历史本身也满足线性一致性。因此，可以将一些不相关的历史划分开来，形成多个规模更小的子历史，转而验证这些子历史的线性一致性。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>事务隔离级别测试&lt;/td>
 &lt;td>&lt;a href="https://github.com/jepsen-io/elle">Elle&lt;/a>&lt;/td>
 &lt;td>Elle 是用来验证数据库事务隔离级别的检查工具。
&lt;br>&lt;br>
Elle 是一个纯黑盒的测试工具，巧妙的构造了一个测试场景，通过客户端生成的历史构造出依赖关系图，通过判断依赖图中是否有环以及分析环来确定事务的出现的异常类型，来确定事务的隔离级别。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>事务隔离级别测试&lt;/td>
 &lt;td>&lt;a href="https://github.com/postgres/postgres/tree/master/src/test/isolation">pg_isolation_regress&lt;/a>&lt;/td>
 &lt;td>包含一组针对 PostgreSQL 中并发行为的测试。
&lt;br>&lt;br>
这些测试需要运行多个交互事务，这需要管理多个并发连接，因此无法使用常规 pg_regress 程序进行测试。主要测试可序列化隔离级别，也添加了针对其他类型并发行为的测试。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>数据库测什么与怎么测</title><link>https://imx.ink/tech/2024/04/22/what-and-how-to-test-the-database/</link><pubDate>Mon, 22 Apr 2024 18:00:00 +0800</pubDate><guid>https://imx.ink/tech/2024/04/22/what-and-how-to-test-the-database/</guid><description>&lt;h2 id="数据库测什么与怎么测">数据库测什么与怎么测&lt;/h2>
&lt;p>传说中有三个问题能直击灵魂：“你是谁？从哪来？到哪去？”&lt;/p>
&lt;p>对于测试人员来说，“你是谁”这个问题已经解决了，剩下两个问题也随之变成了“测什么”和“怎么测”。&lt;/p>
&lt;h2 id="测什么">测什么&lt;/h2>
&lt;p>如果从代码开始，由内而外进行总结的话，数据库的测试，可以分为以下层次。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>序号&lt;/th>
 &lt;th>测试项&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>0&lt;/td>
 &lt;td>代码静态检查&lt;/td>
 &lt;td>根据所选择的开发语言，可以根据已制定的开发规范选择相应的自动化检查工具，在代码合并到主仓库之前完成检查。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>1&lt;/td>
 &lt;td>基于编译器的检查，sanitizers&lt;/td>
 &lt;td>无论是传统一些的 valgrind，还是现在开始流行的 google sanitizers，都能够在产品走向生产环境之前，暴露出一些内存、线程等相关问题。
&lt;br>&lt;br>
严格来讲这些问题的暴露是需要和丰富的测例库配合的，但由于 sanitizers 需要在编译时打开相关的选项，所以笔者选择将其放在紧挨着代码静态检查的地方。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>2&lt;/td>
 &lt;td>单元测试&lt;/td>
 &lt;td>这是最贴近代码的测试形式，能一定程度保证被测试单元的质量，减少低级错误所引发的 bug。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3&lt;/td>
 &lt;td>Assert&lt;/td>
 &lt;td>如果说单元测试保证的是零件的质量，合理并必要的 Debug Assert 则能够通过检查关键变量是否为合理值，从而尽早地检查出零件组合之后存在的问题。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4&lt;/td>
 &lt;td>基本功能测试（冒烟测试）&lt;/td>
 &lt;td>这个阶段的测试内容，主要是保证数据库能够像一个数据库一样运行，能够像一个数据库一样对用户的操作作出反应。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5&lt;/td>
 &lt;td>SQL 逻辑测试&lt;/td>
 &lt;td>一般而言，SQL 逻辑测试是数据库测试的重中之重，因为如果 SQL 语句执行的结果有问题，数据库其他特性做得再好也没有意义了。
&lt;br>&lt;br>
可以说数据库领域的新人和新产品是十分幸运的，因为市面上有很多成熟的开源数据库，在开源了代码的同时也开源了它们的海量测例，后来者可以直接用测例来验证自己的数据库产品。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6&lt;/td>
 &lt;td>SQL 混淆测试&lt;/td>
 &lt;td>混淆测试即 Fuzz 测试，算是 SQL 逻辑测试的延伸，主要思路是通过分析语法树自动生成大量随机的 SQL 语句，对数据库解析器的解析能力进行考验。
&lt;br>&lt;br>
现在主要有两种思路：一种是不关心语句执行结果，只检查解析器是否存在可能导致崩溃的 bug；另一种则是按照特定的算法生成语句，能够根据算法推断出语句的执行结果，再跟数据库实际返回的结果做比较。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>7&lt;/td>
 &lt;td>压力测试&lt;/td>
 &lt;td>无故障场景下的稳定性测试，测试的手段一般都很简单，基本是通过其他工具程序模拟出长时间、高并发、高频率的客户端动作。
&lt;br>&lt;br>
具体可以大致分为 CPU 资源紧张、磁盘资源紧张、内存资源紧张等几个测试方向，重点观察数据库在一般压力情况下和高压情况下，是否会出现语句执行结果出错、非预期的死锁、性能相关指标变化不符合预期等问题。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>8&lt;/td>
 &lt;td>故障模拟测试&lt;/td>
 &lt;td>在没有数据副本的情况下，故障模拟测试一般都围绕着数据安全性进行，确认故障发生时已提交的事务数据不丢失，未提交的数据不能生效。
&lt;br>&lt;br>
故障形式一般以通过 kill 命令杀死数据库进程为主。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>9&lt;/td>
 &lt;td>性能测试&lt;/td>
 &lt;td>固定场景下测试并记录数据，待新版本发布时进行回归对比。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>10&lt;/td>
 &lt;td>事务属性相关测试&lt;/td>
 &lt;td>事务的 ACID 四个属性，其中 ACD 三个属性都很好测试验证，剩下的 I 则无论是测试难度还是对数据库的重要性，都是四个属性中最高的。
&lt;br>&lt;br>
基于传统的 ANSI 标准定义的隔离级，RC 和 Serializable 的定义清晰，相对比较容易设计测例编写测试工具；但 RR 隔离级则含糊得很，需要开发与测试人员共同参考一些比较新的论文，共同确认所研发的数据库 RR 隔离级具体能避免哪些问题，不能避免哪些问题。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="怎么测">怎么测&lt;/h2>
&lt;p>或者具体地说，我们需要编写怎样的测试工具。&lt;/p></description></item><item><title>Gin 框架的 Web 服务流程</title><link>https://imx.ink/tech/2024/03/05/go-language-gin-framework/</link><pubDate>Tue, 05 Mar 2024 20:00:00 +0800</pubDate><guid>https://imx.ink/tech/2024/03/05/go-language-gin-framework/</guid><description>&lt;h2 id="gin-框架的-web-服务流程">Gin 框架的 Web 服务流程&lt;/h2>
&lt;p>Go 标准库 &lt;code>net/http&lt;/code> 提供了基础的 Web 功能，即监听端口，映射静态路由，解析 HTTP 报文。一些 Web 开发中简单的需求并不支持，需要更强大的框架实现：&lt;/p>
&lt;ul>
&lt;li>动态路由：例如 &lt;code>hello/:name&lt;/code>，&lt;code>hello/*&lt;/code> 这类的规则；&lt;/li>
&lt;li>鉴权：没有分组/统一鉴权的能力，需要在每个路由映射的handler中实现；&lt;/li>
&lt;li>模板：没有统一简化的HTML机制；&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://github.com/gin-gonic/gin">gin&lt;/a> 是一个应用广泛的 Go 语言 Web 框架框架，它基于 &lt;a href="https://github.com/julienschmidt/httprouter">htttprouter&lt;/a> 实现最重要的路由模块，采用类似字典树一样的数据结构来存储路由与 &lt;code>handle&lt;/code> 方法的映射。&lt;/p>
&lt;h2 id="go-语言-web-服务流程">Go 语言 Web 服务流程&lt;/h2>
&lt;p>使用 go 语言内置的 &lt;code>net&lt;/code> 包启动的一个 web 服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 注册一个服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HandleFunc&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/hello&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">w&lt;/span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ResponseWriter&lt;/span>, &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Fprintf&lt;/span>(&lt;span style="color:#a6e22e">w&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Hello, %q&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">html&lt;/span>.&lt;span style="color:#a6e22e">EscapeString&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">URL&lt;/span>.&lt;span style="color:#a6e22e">Path&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 监听 8080 端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ListenAndServe&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;:8080&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">nil&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当执行上面的服务 &lt;code>go run main.go&lt;/code> 时，此时在 &lt;code>ListenAndServe&lt;/code> 方法会先创建一个 &lt;code>Server{Addr: addr, Handler: handler}&lt;/code> 结构：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// net/http/server.go&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ListenAndServe listens on the TCP network address addr and then calls&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Serve with handler to handle requests on incoming connections.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Accepted connections are configured to enable TCP keep-alives.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// The handler is typically nil, in which case the DefaultServeMux is used.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ListenAndServe always returns a non-nil error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">ListenAndServe&lt;/span>(&lt;span style="color:#a6e22e">addr&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#a6e22e">handler&lt;/span> &lt;span style="color:#a6e22e">Handler&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">server&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">Server&lt;/span>{&lt;span style="color:#a6e22e">Addr&lt;/span>: &lt;span style="color:#a6e22e">addr&lt;/span>, &lt;span style="color:#a6e22e">Handler&lt;/span>: &lt;span style="color:#a6e22e">handler&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">server&lt;/span>.&lt;span style="color:#a6e22e">ListenAndServe&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>server&lt;/code> 对象的 &lt;code>ListenAndServe&lt;/code> 方法会开启 &lt;code>net.Listen&lt;/code> 进行监听，然后调用 &lt;code>srv.Serve(ln)&lt;/code> 服务：&lt;/p></description></item><item><title>解决国内服务器 Github 无法访问</title><link>https://imx.ink/tech/2023/11/01/solve-the-problem-that-github-cannot-be-accessed/</link><pubDate>Wed, 01 Nov 2023 17:00:00 +0800</pubDate><guid>https://imx.ink/tech/2023/11/01/solve-the-problem-that-github-cannot-be-accessed/</guid><description>&lt;h2 id="解决国内服务器-github-无法访问">解决国内服务器 Github 无法访问&lt;/h2>
&lt;p>GitHub 访问慢、访问超时一直是国内服务器困扰的问题，网上各种 ping IP、配 Host 的方式无法一劳永逸。&lt;a href="https://github.com/521xueweihan/GitHub520">GitHub520&lt;/a> 开源项目轻松解决了 GitHub 访问的难题，配置简单，自动化更新。&lt;/p>
&lt;h2 id="使用方法适用于类-unix-系统">使用方法（适用于类 Unix 系统）&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># GNU（Ubuntu/CentOS/Fedora）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo sh -c &lt;span style="color:#e6db74">&amp;#39;sed -i &amp;#34;/# GitHub520 Host Start/Q&amp;#34; /etc/hosts &amp;amp;&amp;amp; curl https://raw.hellogithub.com/hosts &amp;gt;&amp;gt; /etc/hosts&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BSD/macOS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sed -i &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/# GitHub520 Host Start/,/# Github520 Host End/d&amp;#34;&lt;/span> /etc/hosts &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> curl https://raw.hellogithub.com/hosts &amp;gt;&amp;gt; /etc/hosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将上面的命令添加到 &lt;code>crontab&lt;/code> 定时执行，使用前确保 GitHub520 内容在该文件最后部分。&lt;/p></description></item><item><title>PyAutoGUI 模拟鼠标点击</title><link>https://imx.ink/tech/2023/09/21/simulate-mouse-with-pyautogui/</link><pubDate>Thu, 21 Sep 2023 14:44:00 +0800</pubDate><guid>https://imx.ink/tech/2023/09/21/simulate-mouse-with-pyautogui/</guid><description>&lt;h2 id="pyautogui-模拟鼠标点击">PyAutoGUI 模拟鼠标点击&lt;/h2>
&lt;p>如果你想在 Windows 系统中创建一个自动点击脚本，你可以使用脚本语言（如 Python、JavaScript 或者 PowerShell）来实现。&lt;/p>
&lt;h2 id="代码示例">代码示例&lt;/h2>
&lt;p>Python 代码示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要先安装 PyAutoGUI 库: pip install pyautogui&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pyautogui
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">10&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pyautogui&lt;span style="color:#f92672">.&lt;/span>click(&lt;span style="color:#ae81ff">100&lt;/span>, &lt;span style="color:#ae81ff">100&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JavaScript 代码示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">setTimeout&lt;/span>(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> window.&lt;span style="color:#a6e22e">dispatchEvent&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">MouseEvent&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;click&amp;#39;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">view&lt;/span>&lt;span style="color:#f92672">:&lt;/span> window,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bubbles&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">cancelable&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>PowerShell 代码示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>$i &lt;span style="color:#f92672">=&lt;/span> 0; $i -lt 10; $i++&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>System.Windows.Forms.Cursor&lt;span style="color:#f92672">]&lt;/span>::Position &lt;span style="color:#f92672">=&lt;/span> New-Object System.Drawing.Point&lt;span style="color:#f92672">(&lt;/span>100, 100&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>System.Windows.Forms.SendKeys&lt;span style="color:#f92672">]&lt;/span>::SendWait&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{LBUTTON}&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="获取屏幕坐标">获取屏幕坐标&lt;/h2>
&lt;p>鼠标就会出现一个浮窗跟随，实时显示当前鼠标坐标，Python 代码示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> pyautogui
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> tkinter &lt;span style="color:#66d9ef">as&lt;/span> tk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">update_position_label&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 获取鼠标当前位置的坐标&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x, y &lt;span style="color:#f92672">=&lt;/span> pyautogui&lt;span style="color:#f92672">.&lt;/span>position()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> position_label&lt;span style="color:#f92672">.&lt;/span>configure(text&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;坐标：(&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>x&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>y&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> position_label&lt;span style="color:#f92672">.&lt;/span>after(&lt;span style="color:#ae81ff">100&lt;/span>, update_position_label)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建主窗口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window &lt;span style="color:#f92672">=&lt;/span> tk&lt;span style="color:#f92672">.&lt;/span>Tk()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>title(&lt;span style="color:#e6db74">&amp;#34;鼠标坐标&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>geometry(&lt;span style="color:#e6db74">&amp;#34;200x50&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 创建坐标标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>position_label &lt;span style="color:#f92672">=&lt;/span> tk&lt;span style="color:#f92672">.&lt;/span>Label(window, text&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;坐标：(0, 0)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>position_label&lt;span style="color:#f92672">.&lt;/span>pack()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 更新坐标标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>update_position_label()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置窗口始终在最顶层显示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>attributes(&lt;span style="color:#e6db74">&amp;#34;-topmost&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 隐藏窗口标题栏&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>overrideredirect(&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 窗口跟随鼠标移动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">move_window&lt;/span>(event):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x, y &lt;span style="color:#f92672">=&lt;/span> event&lt;span style="color:#f92672">.&lt;/span>x_root, event&lt;span style="color:#f92672">.&lt;/span>y_root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> window&lt;span style="color:#f92672">.&lt;/span>geometry(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>x&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">+&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>y&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>bind(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;Motion&amp;gt;&amp;#34;&lt;/span>, move_window)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 运行窗口主循环&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>window&lt;span style="color:#f92672">.&lt;/span>mainloop()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Rouge 插件支持 Jekyll 代码高亮</title><link>https://imx.ink/tech/2023/09/18/jekyll-with-rouge/</link><pubDate>Mon, 18 Sep 2023 20:36:00 +0800</pubDate><guid>https://imx.ink/tech/2023/09/18/jekyll-with-rouge/</guid><description>&lt;h2 id="rouge-插件支持-jekyll-代码高亮">Rouge 插件支持 Jekyll 代码高亮&lt;/h2>
&lt;p>Jekyll 内置支持使用 Rouge 或 Pygments 对代码片段进行语法高亮显示，Rouge 是 Jekyll 3 及更高版本中的默认语法高亮显示，且支持 Github Pages。&lt;/p>
&lt;h2 id="安装-rouge">安装 Rouge&lt;/h2>
&lt;p>安装 Rouge 和普通的 Jekyll 插件安装一样：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ gem install rouge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在 &lt;code>_config.yml&lt;/code> 文件声明使用：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">highlighter&lt;/span>: &lt;span style="color:#ae81ff">rouge&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你使用 &lt;code>kramdown&lt;/code>，那么添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">markdown&lt;/span>: &lt;span style="color:#ae81ff">kramdown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kramdown&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">input&lt;/span>: &lt;span style="color:#ae81ff">GFM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">syntax_highlighter&lt;/span>: &lt;span style="color:#ae81ff">rouge&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使用-rouge-代码语法高亮">使用 Rouge 代码语法高亮&lt;/h2>
&lt;p>Rouge 可以支持 100 多种语言的语法突出显示，参考&lt;a href="https://github.com/rouge-ruby/rouge/wiki/List-of-supported-languages-and-lexers">官方说明&lt;/a>。要使用语法突出显示来呈现代码块，示例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>{% raw %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% highlight ruby linenos %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>def foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts &amp;#39;foo&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% endhighlight %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% endraw %}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>包含 &lt;code>linenos&lt;/code> 参数将强制突出显示的代码包含行号。&lt;/p>
&lt;h2 id="rouge-样式">Rouge 样式&lt;/h2>
&lt;p>Rouge 提供了一些语法突出显示样式主题，参考官方说明：&lt;a href="https://rouge-ruby.github.io/docs/Rouge/Themes.html">Rouge 主题文档&lt;/a> / &lt;a href="https://github.com/mzlogin/rouge-themes">Rouge 主题&lt;/a>。&lt;/p></description></item><item><title>解决 SQLite 并发异常问题的方法</title><link>https://imx.ink/tech/2023/07/26/sqlite-concurrency-exception/</link><pubDate>Wed, 26 Jul 2023 14:36:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/26/sqlite-concurrency-exception/</guid><description>&lt;h2 id="解决-sqlite-并发异常问题的方法">解决 SQLite 并发异常问题的方法&lt;/h2>
&lt;p>SQLite 是文件级别的数据库，其锁也是文件级别的：多个进程/线程可以同时读，但是同时只能有一个进程/线程写。&lt;/p>
&lt;h2 id="问题描述">问题描述&lt;/h2>
&lt;p>在执行写操作时，数据库文件被琐定，此时任何其他读/写操作都被阻塞，如果阻塞超过5秒钟（默认是5秒，能过重新编译 SQLite 可以修改超时时间），就报&amp;quot;database is locked&amp;quot;错误。&lt;/p>
&lt;h2 id="解决方法">解决方法&lt;/h2>
&lt;p>1、连接数据库时设置参数 &lt;code>timeout&lt;/code>，设置当数据库处于锁定状态时最长等待时间，&lt;code>sqlite3.connect()&lt;/code>函数的参数 &lt;code>timeout&lt;/code> 默认值为 5 秒，不适合服务端程序；&lt;/p>
&lt;p>2、使用锁机制使得多个进程/线程竞争进入临界区，确保同一时刻只有一个进程/线程执行写入数据库的代码；&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 以多进程写为例, 注释 lock.acquire() 和 lock.release() 可复现问题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># @Time : 2023/7/24 10:38&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># @Author : ziyaoxie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># @File : write_sqlite_with_multiprocessing.py&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sqlite3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> traceback
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> multiprocessing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> contextlib &lt;span style="color:#f92672">import&lt;/span> closing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">prepare_db&lt;/span>(db, tbl, col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;CREATE TABLE &lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74"> (&lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74"> text);&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(tbl, col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> closing(sqlite3&lt;span style="color:#f92672">.&lt;/span>connect(db)) &lt;span style="color:#66d9ef">as&lt;/span> cnn:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cursor &lt;span style="color:#f92672">=&lt;/span> cnn&lt;span style="color:#f92672">.&lt;/span>cursor()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cursor&lt;span style="color:#f92672">.&lt;/span>execute(&lt;span style="color:#e6db74">&amp;#39;DROP TABLE IF EXISTS &lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(tbl))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> db, tbl, col
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">write&lt;/span>(db, tbl, col, value, lock):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># The default timeout value of sqlite is 5s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timeout &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> closing(sqlite3&lt;span style="color:#f92672">.&lt;/span>connect(db, timeout&lt;span style="color:#f92672">=&lt;/span>timeout)) &lt;span style="color:#66d9ef">as&lt;/span> cnn:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cursor &lt;span style="color:#f92672">=&lt;/span> cnn&lt;span style="color:#f92672">.&lt;/span>cursor()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;INSERT INTO &lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74"> (&lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74">) VALUES (&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{2}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;);&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(tbl, col, value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> value &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cnn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(traceback&lt;span style="color:#f92672">.&lt;/span>format_exc())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">work&lt;/span>(d, lock):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">&amp;#39;multi.sqlite&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tbl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;logging&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> col &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;logged&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> write(db, tbl, col, d, lock)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">r&lt;/span>&lt;span style="color:#e6db74">&amp;#39;multi.sqlite&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tbl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;logging&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> col &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;logged&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prepare_db(db, tbl, col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool &lt;span style="color:#f92672">=&lt;/span> multiprocessing&lt;span style="color:#f92672">.&lt;/span>Pool(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock &lt;span style="color:#f92672">=&lt;/span> multiprocessing&lt;span style="color:#f92672">.&lt;/span>Manager()&lt;span style="color:#f92672">.&lt;/span>Lock()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> [(i, lock) &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1000&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapped &lt;span style="color:#f92672">=&lt;/span> pool&lt;span style="color:#f92672">.&lt;/span>starmap(work, data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pool&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> mapped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://beets.io/blog/sqlite-nightmare.html">The beets blog: the SQLite lock timeout nightmare&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/jasongrass/p/14609946.html">sqlite 超时时间设置 [database is locked]&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Linux 性能指标监控：CPU、Memory、IO、Network</title><link>https://imx.ink/tech/2023/07/18/linux-performance-monitoring/</link><pubDate>Tue, 18 Jul 2023 10:57:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/18/linux-performance-monitoring/</guid><description>&lt;h2 id="linux-性能指标监控cpumemoryionetwork">Linux 性能指标监控：CPU、Memory、IO、Network&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>&lt;strong>指标&lt;/strong>&lt;/th>
 &lt;th>&lt;strong>工具&lt;/strong>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>cpu&lt;/strong>&lt;/td>
 &lt;td>usr &amp;lt;= 70%, sys &amp;lt;= 35%, usr+sys &amp;lt;= 70%&lt;/td>
 &lt;td>top&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>memory&lt;/strong>&lt;/td>
 &lt;td>si == so == 0, 可用空间 &amp;gt;= 30%&lt;/td>
 &lt;td>vmstat 5; free&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>io&lt;/strong>&lt;/td>
 &lt;td>iowait% &amp;lt; 20%&lt;/td>
 &lt;td>iostat -x&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>network&lt;/strong>&lt;/td>
 &lt;td>网络连通性/吞吐量, TCP连接状态 TIME_WAIT&lt;/td>
 &lt;td>sar -n DEV 1; ping; netstat -nat&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="cpu">CPU&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ top
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>top - 09:14:56 up &lt;span style="color:#ae81ff">264&lt;/span> days, 20:56, &lt;span style="color:#ae81ff">1&lt;/span> user, load average: 0.02, 0.04, 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tasks: &lt;span style="color:#ae81ff">87&lt;/span> total, &lt;span style="color:#ae81ff">1&lt;/span> running, &lt;span style="color:#ae81ff">86&lt;/span> sleeping, &lt;span style="color:#ae81ff">0&lt;/span> stopped, &lt;span style="color:#ae81ff">0&lt;/span> zombie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cpu&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>: 0.0%us, 0.2%sy, 0.0%ni, 99.7%id, 0.0%wa, 0.0%hi, 0.0%si, 0.2%st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mem: 377672k total, 322332k used, 55340k free, 32592k buffers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Swap: 397308k total, 67192k used, 330116k free, 71900k cached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">2856&lt;/span> &lt;span style="color:#ae81ff">656&lt;/span> &lt;span style="color:#ae81ff">388&lt;/span> S 0.0 0.2 0:49.40 init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.00 kthreadd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> root &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 7:15.20 ksoftirqd/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> root RT &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> S 0.0 0.0 0:00.00 migration/0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第一行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 09:14:56 ： 系统当前时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 264 days, 20:56 ： 系统开机到现在经过了多少时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1 users ： 当前2用户在线&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># load average: 0.02, 0.04, 0.00： 系统1分钟、5分钟、15分钟的CPU负载信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第二行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Tasks：任务;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 87 total：很好理解，就是当前有87个任务，也就是87个进程。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 1 running：1个进程正在运行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 86 sleeping：86个进程睡眠&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0 stopped：停止的进程数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0 zombie：僵死的进程数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第三行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Cpu(s)：表示这一行显示CPU总体信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.0%us：用户态进程占用CPU时间百分比，不包含renice值为负的任务占用的CPU的时间。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.7%sy：内核占用CPU时间百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.0%ni：改变过优先级的进程占用CPU的百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 99.3%id：空闲CPU时间百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.0%wa：等待I/O的CPU时间百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.0%hi：CPU硬中断时间百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 0.0%si：CPU软中断时间百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 注：这里显示数据是所有cpu的平均值，如果想看每一个cpu的处理情况，按1即可；折叠，再次按1；&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第四行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Men：内存的意思&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8175320kk total：物理内存总量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8058868k used：使用的物理内存量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 116452k free：空闲的物理内存量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 283084k buffers：用作内核缓存的物理内存量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第五行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Swap：交换空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 6881272k total：交换区总量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4010444k used：使用的交换区量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2870828k free：空闲的交换区量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 4336992k cached：缓冲交换区总量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 进程信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 再下面就是进程信息：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PID：进程的ID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># USER：进程所有者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PR：进程的优先级别，越小越优先被执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># NInice：值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># VIRT：进程占用的虚拟内存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># RES：进程占用的物理内存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SHR：进程使用的共享内存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># S：进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %CPU：进程占用CPU的使用率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %MEM：进程使用的物理内存和总内存的百分比&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># TIME+：该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># COMMAND：进程启动命令名称&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="memory">Memory&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> total used free shared buffers cached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> Mem: &lt;span style="color:#ae81ff">24677460&lt;/span> &lt;span style="color:#ae81ff">23276064&lt;/span> &lt;span style="color:#ae81ff">1401396&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">870540&lt;/span> &lt;span style="color:#ae81ff">12084008&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> Swap: &lt;span style="color:#ae81ff">25151484&lt;/span> &lt;span style="color:#ae81ff">224188&lt;/span> &lt;span style="color:#ae81ff">24927296&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第二行说明内存使用情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第一列是总量（total），第二列是使用量（used），第三列是可用量（free），第四列表示被几个进程共享的内存（shared），第五列表示被 OS buffer 住的内存，第六列表示被 OS cache 的内存。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># buffer/cache:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># A buffer is something that has yet to be &amp;#34;written&amp;#34; to disk.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># A cache is something that has been &amp;#34;read&amp;#34; from the disk and stored for later use.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 释放掉被系统 cache 占用的数据：释放掉被系统 cache 占用的数据。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第三行为交换区的信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 分别是交换的总量（total），使用量（used）和有多少空闲的交换区（free）。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ vmstat &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r b swpd free buff cache si so bi bo in cs us sy id wa st
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">27900472&lt;/span> &lt;span style="color:#ae81ff">204216&lt;/span> &lt;span style="color:#ae81ff">28188356&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">75&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">27900380&lt;/span> &lt;span style="color:#ae81ff">204228&lt;/span> &lt;span style="color:#ae81ff">28188360&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">13&lt;/span> &lt;span style="color:#ae81ff">33312&lt;/span> &lt;span style="color:#ae81ff">126221&lt;/span> &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">58&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">27900340&lt;/span> &lt;span style="color:#ae81ff">204240&lt;/span> &lt;span style="color:#ae81ff">28188364&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">32755&lt;/span> &lt;span style="color:#ae81ff">125566&lt;/span> &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">58&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Procs（进程）:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># r: 运行队列中进程数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># b: 等待IO的进程数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Memory（内存）:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># swpd: 使用虚拟内存大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># free: 可用内存大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># buff: 用作缓冲的内存大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cache: 用作缓存的内存大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Swap:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># si: 每秒从交换区写到内存的大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># so: 每秒写入交换区的内存大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># IO：（现在的Linux版本块的大小为1024bytes）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># bi: 每秒读取的块数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># bo: 每秒写入的块数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># system：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># in: 每秒中断数，包括时钟中断&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cs: 每秒上下文切换数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># CPU（以百分比表示）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># us: 用户进程执行时间(user time)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sy: 系统进程执行时间(system time)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># id: 空闲时间(包括IO等待时间)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wa: 等待IO时间&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="io">IO&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ iostat -xk &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux 4.14.105-1-tlinux3-0023.1 &lt;span style="color:#f92672">(&lt;/span>TENCENT64.site&lt;span style="color:#f92672">)&lt;/span> 	07/17/2023 	_x86_64_	&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span> CPU&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>avg-cpu: %user %nice %system %iowait %steal %idle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0.10 0.00 0.06 0.00 0.00 99.83
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: rrqm/s wrqm/s r/s w/s rkB/s wkB/s avgrq-sz avgqu-sz await r_await w_await svctm %util
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvme0n1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvme1n1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvme2n1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvme3n1 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sda 0.00 43.00 0.00 60.00 0.00 2592.00 86.40 0.01 0.13 0.00 0.13 0.13 0.80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>md0 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># cpu属性值说明&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %user：CPU处在用户模式下的时间百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %nice：CPU处在带NICE值的用户模式下的时间百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %system：CPU处在系统模式下的时间百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %iowait：CPU等待输入输出完成时间的百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %steal：管理程序维护另一个虚拟处理器时，虚拟CPU的无意识等待时间百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %idle：CPU空闲时间百分比。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果%iowait的值过高，表示硬盘存在I/O瓶颈，%idle值高，表示CPU较空闲，如果%idle值高但系统响应慢时，有可能是CPU等待分配内存，此时应加大内存容量。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %idle值如果持续低于10，那么系统的CPU处理能力相对较低，表明系统中最需要解决的资源是CPU。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># disk属性值说明&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rrqm/s： 每秒进行 merge 的读操作数目.即 delta(rmerge)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wrqm/s： 每秒进行 merge 的写操作数目.即 delta(wmerge)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># r/s： 每秒完成的读 I/O 设备次数.即 delta(rio)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># w/s： 每秒完成的写 I/O 设备次数.即 delta(wio)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rsec/s： 每秒读扇区数.即 delta(rsect)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wsec/s： 每秒写扇区数.即 delta(wsect)/s&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rkB/s： 每秒读K字节数.是 rsect/s 的一半,因为每扇区大小为512字节.(需要计算)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># wkB/s： 每秒写K字节数.是 wsect/s 的一半.(需要计算)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># avgrq-sz：平均每次设备I/O操作的数据大小 (扇区).delta(rsect+wsect)/delta(rio+wio)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># avgqu-sz：平均I/O队列长度.即 delta(aveq)/s/1000 (因为aveq的单位为毫秒).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># await： 平均每次设备I/O操作的等待时间 (毫秒).即 delta(ruse+wuse)/delta(rio+wio)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># svctm： 平均每次设备I/O操作的服务时间 (毫秒).即 delta(use)/delta(rio+wio)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># %util： 一秒中有百分之多少的时间用于 I/O 操作,或者说一秒中有多少时间 I/O 队列是非空的，即 delta(use)/s/1000 (因为use的单位为毫秒)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果 %util 接近 100%，说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果svctm的值与await很接近，表示几乎没有I/O等待，磁盘性能很好，如果await的值远高于svctm的值，则表示I/O队列等待太长，系统上运行的应用程序将变慢。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="network">Network&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 通过ping命令检测网络的连通性&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ netstat -nat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Active Internet connections &lt;span style="color:#f92672">(&lt;/span>servers and established&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Proto Recv-Q Send-Q Local Address Foreign Address State
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 0.0.0.0:56000 0.0.0.0:* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 0.0.0.0:36000 0.0.0.0:* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 0.0.0.0:48369 0.0.0.0:* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 0.0.0.0:80 0.0.0.0:* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 127.0.0.1:42222 0.0.0.0:* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:44888 9.134.205.9:9922 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">224&lt;/span> 9.135.140.130:36000 30.20.62.33:63640 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:58860 169.254.0.35:9988 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:36000 30.20.62.33:64643 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:55180 9.134.37.243:80 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:55306 9.134.104.10:80 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> :::36000 :::* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> :::3306 :::* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> :::80 :::* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> :::33060 :::* LISTEN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp6 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 9.135.140.130:3306 9.30.4.220:41902 ESTABLISHED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 查看TCP连接状态&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Recv-Q：当连接为ESTABLISHED状态时，表示没有被应用程序取走的字节数。当连接为LISTEN状态时，表示syn backlog的当前值。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Send-Q：当连接为LISTEN状态时，表示没有被远端确认的字节数。当连接为LISTEN状态时，表示最大的syn backlog值。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Local Address：本地端口地址。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Foreign Address：远端端口地址。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># State：套接字状态。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># TIME_WAIT状态的出现，是由于主动断开连接导致的，也就是说，应用程序中存在大量的短连接。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 当出现大量CLOSE_WAIT状态时，通常是应用程序，未及时调用close()关闭连接。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ sar -n DEV &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux 5.4.119-1-tlinux4-0010.3 &lt;span style="color:#f92672">(&lt;/span>TENCENT64.site&lt;span style="color:#f92672">)&lt;/span> 	07/19/2023 	_x86_64_	&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span> CPU&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:56:35 AM IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:56:36 AM eth1 7.00 6.00 0.75 0.58 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:56:36 AM eth0 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11:56:36 AM lo 0.00 0.00 0.00 0.00 0.00 0.00 0.00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># IFACE：LAN接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rxpck/s：每秒钟接收的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># txpck/s：每秒钟发送的数据包&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># rxbyt/s：每秒钟接收的字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># txbyt/s：每秒钟发送的字节数&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="参考资料">参考资料&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.donothing.site/2019/05/01/linux-server-maint/#part-2e9bff25d9134309">Linux 服务器维护简易指南&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/index.html">Linux工具快速教程&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>ChaosBlade 简述及内部实现逻辑</title><link>https://imx.ink/tech/2023/07/14/introduction-and-implementation-of-chaosblade/</link><pubDate>Fri, 14 Jul 2023 19:52:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/14/introduction-and-implementation-of-chaosblade/</guid><description>&lt;h2 id="chaosblade-简述及内部实现逻辑">ChaosBlade 简述及内部实现逻辑&lt;/h2>
&lt;p>ChaosBlade 是一款混沌工程工具，目前支持的演练场景有操作系统类的 CPU、磁盘、进程、网络，Java 应用类的 Dubbo、MySQL、Servlet 和自定义类方法延迟或抛异常等以及杀容器、杀 Pod。&lt;/p>
&lt;p>Chaosblade 可直接编译运行，支持 cli 命令，具体可执行 &lt;code>blade create -h&lt;/code> 查看：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Create a chaos engineering experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blade create &lt;span style="color:#f92672">[&lt;/span>command&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Aliases:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> create, c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Examples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>create dubbo delay --time &lt;span style="color:#ae81ff">3000&lt;/span> --offset &lt;span style="color:#ae81ff">100&lt;/span> --service com.example.Service --consumer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Available Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cplus c++ experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cpu Cpu experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disk Disk experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker Execute a docker experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> druid Druid experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dubbo dubbo experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http http experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jvm method
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k8s Kubernetes experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mysql mysql experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> network Network experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> process Process experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rocketmq Rocketmq experiment,can make message send or pull delay and exception
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> script Script chaos experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> servlet java servlet experiment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Flags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help help &lt;span style="color:#66d9ef">for&lt;/span> create
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Global Flags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d, --debug Set client to DEBUG mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Use &lt;span style="color:#e6db74">&amp;#34;blade create [command] --help&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> more information about a command.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>github地址: &lt;a href="https://github.com/chaosblade-io/chaosblade">https://github.com/chaosblade-io/chaosblade&lt;/a>&lt;/p></description></item><item><title>PHP POST 接受长字符串时出现 500 错误</title><link>https://imx.ink/tech/2023/07/06/500-error-accepts-long-string/</link><pubDate>Thu, 06 Jul 2023 15:02:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/06/500-error-accepts-long-string/</guid><description>&lt;h2 id="php-post-接受长字符串时出现-500-错误">PHP POST 接受长字符串时出现 500 错误&lt;/h2>
&lt;p>今天发布 typecho 文章出现 500 错误，字符串短没有任何问题，长文章直接报错 &lt;code>500 Internal Server Error&lt;/code>。&lt;/p>
&lt;p>查看 nginx 错误日志 &lt;code>/var/log/nginx/error.log&lt;/code> 发现以下错误信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>2023/07/06 12:40:08 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000004&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023/07/06 12:41:43 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000005&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023/07/06 12:42:26 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000006&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023/07/06 12:42:40 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000007&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023/07/06 12:43:11 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000008&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023/07/06 12:44:35 [crit] 15896#0: *2125 open() &amp;#34;/var/lib/nginx/tmp/client_body/0000000009&amp;#34; failed (13: Permission denied), client: 119.147.10.212, server: imx.ink, request: &amp;#34;POST /action/contents-post-edit?_=8679a495ae30a8c84ff2fc1fccb8a4e7 HTTP/2.0&amp;#34;, host: &amp;#34;imx.ink&amp;#34;, referrer: &amp;#34;https://imx.ink/admin/write-post.php?cid=42&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进到 &lt;code>/var/lib&lt;/code> 目录下查看 nginx 目录的权限：&lt;/p></description></item><item><title>iptables 命令整理</title><link>https://imx.ink/tech/2023/07/06/shell-command-iptables/</link><pubDate>Thu, 06 Jul 2023 12:38:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/06/shell-command-iptables/</guid><description>&lt;h2 id="iptables-命令整理">iptables 命令整理&lt;/h2>
&lt;p>&lt;code>iptables&lt;/code> 是 Linux 系统上的 IP 信息包过滤系统。广义上的 &lt;code>iptables&lt;/code> 实际上是由 &lt;code>netfilter&lt;/code> 和 &lt;code>iptables&lt;/code> 两个组件组成，而狭义上的 &lt;code>iptables&lt;/code> 是指一个命令行工具，用于配置管理信息包的过滤规则。&lt;/p>
&lt;p>&lt;code>netfilter&lt;/code> 是内核的一个子系统，其工作在内核空间，核心是一个报文过滤架构；&lt;code>iptables&lt;/code> 工作在用户空间，用于设置、维护和检查信息包的过滤规则，与 &lt;code>netfilter&lt;/code> 子系统交互，它使插入、修改和除去信息包过滤表中的规则变得容易。&lt;/p>
&lt;h2 id="表链规则">表/链/规则&lt;/h2>
&lt;p>使用 iptables 需要先理解表（table）、链（chain）、规则（rule）这三个概念。&lt;code>netfilter/iptables&lt;/code> 系统可以理解成是 &lt;strong>表（table）&lt;/strong> 的容器，这也是它被称为 iptables 的原因，而表则是 &lt;strong>链（chain）&lt;/strong> 的容器，即所有的链都属于其对应的表，链又是 &lt;strong>规则（rule）&lt;/strong> 的容器。&lt;/p>
&lt;h3 id="表tables">表(tables)&lt;/h3>
&lt;p>&lt;code>iptables&lt;/code> 大致有 raw, filter, nat, mangle, security 等五类表，常用的表有 filter、nat、mangle 三个表。&lt;/p>
&lt;h3 id="链chains">链(chains)&lt;/h3>
&lt;p>链(chains)是数据包传输的路径，对应着前面提到的报文处理的五个阶段，也相当于是五个不同的关卡：INPUT, OUTPUT 链更多的应用在本机的网络控制中，即主要针对本机进出数据的安全控制；而 FORWARD, PREROUTING, POSTROUTING 链更多地应用在对我的网络控制中，特别是机器作为网关使用时的情况。&lt;/p>
&lt;p>链是规则的容器，一条链中可能包含着众多的规则，当一个数据包到达一个链时，iptables 就会从链中第一条规则开始匹配，如果满足该规则的条件，系统就会根据该条规则所定义的方法处理该数据包，否则将继续匹配下一条规则，如果该数据包不符合链中任一条规则，iptables 就会根据该链预先定义的默认策略来处理数据包。&lt;/p>
&lt;h3 id="规则rules">规则(rules)&lt;/h3>
&lt;p>规则(rules)是一些预定义的数据包过滤条件。规则存储在内核空间的信息包过滤表中，数据包每经过一个链(关卡)时，系统会根据链中规则指定的匹配条件来尝试匹配，一旦匹配成功，则由规则后面指定的处理动作进行处理。&lt;/p>
&lt;p>规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等。当数据包与规则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行（accept）、拒绝（reject）和丢弃（drop）等。配置防火墙的主要工作就是添加、修改和删除这些规则。&lt;/p>
&lt;h2 id="数据包流向">数据包流向&lt;/h2>
&lt;p>已知 tables 由 chains 组成，而 chains 又由 rules 组成。常用的表有 filter、nat、mangle 三种，链有五种，对应报文处理的五个阶段。对规则理解的关键：一条规则包括一个条件和一个动作(target)；如果满足条件，就执行处理动作；如果不满足条件，就继续匹配下一条规则。&lt;/p></description></item><item><title>history 命令整理</title><link>https://imx.ink/tech/2023/07/05/shell-command-history/</link><pubDate>Wed, 05 Jul 2023 19:34:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/05/shell-command-history/</guid><description>&lt;h2 id="history-命令整理">history 命令整理&lt;/h2>
&lt;p>history 命令的常用方法记录。&lt;/p>
&lt;h2 id="显示时间戳">显示时间戳&lt;/h2>
&lt;p>如果要让 &lt;code>history&lt;/code> 在显示历史命令时同时显示记录命令的时间，则需要设置如下环境变量：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ export HISTTIMEFORMAT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;%F %T &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也可以设置 &lt;code>alias&lt;/code> 语句来查看最近的历史命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>alias h1&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;history 10&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias h2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;history 20&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias h3&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;history 30&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="搜索历史命令">搜索历史命令&lt;/h2>
&lt;p>按下 &lt;code>Ctrl +R&lt;/code> 然后输入关键字，可以在历史命令中通过关键字来查找已经历史命名。例如，搜索 &lt;code>red&lt;/code>，则显示以前的命令中含有 &lt;code>red&lt;/code> 的命令 &lt;code>cat/etc/redhat-release&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 在命令行提示符下按下Ctrl＋R, 终端将显示如下提示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>reverse-i-search&lt;span style="color:#f92672">)&lt;/span>&lt;span style="color:#ae81ff">\`&lt;/span>red&lt;span style="color:#e6db74">`&lt;/span>: cat/etc/redhat-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 当看到命令后按回车键，就可以重新执行这条命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat /etc/redhat-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fedora release &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Sulphur&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="执行特定命令">执行特定命令&lt;/h2>
&lt;p>用 &lt;code>history&lt;/code> 显示历史命令的时候，在每个命令前边都有一个编号，用 &lt;code>!&lt;/code> + &lt;code>编号&lt;/code> 可以重新执行该条命令。例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ history | more
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> service network restart
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> cat /etc/redhat-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ !4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fedora release &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Sulphur&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="其他配置">其他配置&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 控制历史命令的总数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export HISTSIZE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">450&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export HISTFLESIZE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">450&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 改变历史文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export HISTFILE&lt;span style="color:#f92672">=&lt;/span>/root/.commandline_warrior
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 消除命令历史中的连续重复条目&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export HISTCONTROL&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ignoredups&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 禁止记录任何命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export HISTSIZE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Git rebase 与 merge 的区别</title><link>https://imx.ink/tech/2023/07/05/the-difference-between-git-rebase-and-merge/</link><pubDate>Wed, 05 Jul 2023 19:32:00 +0800</pubDate><guid>https://imx.ink/tech/2023/07/05/the-difference-between-git-rebase-and-merge/</guid><description>&lt;h2 id="git-rebase-与-merge-的区别">Git rebase 与 merge 的区别&lt;/h2>
&lt;p>&lt;code>git rebase&lt;/code> 与 &lt;code>git merge&lt;/code> 的区别在于，&lt;code>merge&lt;/code> 会将不同分支的提交合并成一个新的节点，之前的提交分开显示；而 &lt;code>rebase&lt;/code> 则是将两个分支的提交融合成一个线性的提交。&lt;/p>
&lt;p>如下图所示，一个项目在 &lt;code>C2&lt;/code> 时基于主分支创建了一个 &lt;code>experiment&lt;/code> 分支，并做了一个 &lt;code>C3&lt;/code> 版本的提交：&lt;/p>
&lt;p>{:refdef: style=&amp;ldquo;text-align: center;&amp;rdquo;}
&lt;img src="https://f005.backblazeb2.com/file/wml5yw8gwgll/20230705/git_flow.jpg" alt="git_flow">
{: refdef}&lt;/p>
&lt;p>如果用 &lt;code>merge&lt;/code> 命令合并，结果如下图：&lt;/p>
&lt;p>{:refdef: style=&amp;ldquo;text-align: center;&amp;rdquo;}
&lt;img src="https://f005.backblazeb2.com/file/wml5yw8gwgll/20230705/git_merge.jpg" alt="git_merge">
{: refdef}&lt;/p>
&lt;p>如果用 &lt;code>rebase&lt;/code> 命令合并，结果如下图：&lt;/p>
&lt;p>{:refdef: style=&amp;ldquo;text-align: center;&amp;rdquo;}
&lt;img src="https://f005.backblazeb2.com/file/wml5yw8gwgll/20230705/git_rebase.jpg" alt="git_rebase">
{: refdef}&lt;/p>
&lt;p>单纯的从功能上来讲，Rebase 与 Merge 没有什么区别。但实际上，Rebase 更干净，因为提交历史最后会是线性的，但是 commit 不一定按日期先后排列，而是 local commit 总在后边；Merge 会保留各分支的提交历史，commit 会按日期先后排序，但这样看起来会比较复杂。&lt;/p>
&lt;p>在操作过程中，Merge 操作遇到冲突的时候，当前 &lt;code>merge&lt;/code> 不能继续进行下去，需手动修改冲突内容后再做一次提交；而 &lt;code>rebase&lt;/code> 操作的话，会中断 &lt;code>rebase&lt;/code>，同时会提示去解决冲突。解决冲突后，将修改 &lt;code>add&lt;/code>，然后执行 &lt;code>git rebase --continue&lt;/code> 继续操作，或者 &lt;code>git rebase --skip&lt;/code> 忽略冲突。&lt;/p></description></item><item><title>数据库分库分表</title><link>https://imx.ink/tech/2023/06/28/database-sharding/</link><pubDate>Wed, 28 Jun 2023 12:48:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/28/database-sharding/</guid><description>&lt;h2 id="数据库分库分表">数据库分库分表&lt;/h2>
&lt;p>分库分表在解决如 IO 瓶颈、读写性能、物理存储瓶颈、内存瓶颈、单机故障影响面等问题的同时，也带来如事务性、主键冲突、跨库 join、跨库聚合查询等问题。&lt;/p>
&lt;p>在综合业务场景考虑，正如缓存的使用一样，本着非必须勿使用原则。如数据库确实成为性能瓶颈时，在设计分库分表方案时也应充分考虑方案的扩展性，或者考虑采用成熟热门的分布式数据库解决方案。&lt;/p>
&lt;h2 id="什么是分库分表">什么是分库分表&lt;/h2>
&lt;p>分库：将一个数据库中的数据按照某种规则分拆到多个数据库中，以缓解单服务器的压力（CPU、内存、磁盘、IO）。&lt;/p>
&lt;p>分表：将一个表中的数据按照某种规则分拆到多张表中，降低锁粒度以及索引树，提升数据查询效率。&lt;/p>
&lt;h2 id="为什么分库分表">为什么分库分表&lt;/h2>
&lt;p>性能角度：CPU、内存、磁盘、IO瓶颈；随着业务体量扩大，数据规模达到百万行，数据库索引树庞大，查询性能出现瓶颈；用户并发流量规模扩大，由于单库（单服务器）物理性能限制也无法承载大流量。&lt;/p>
&lt;p>可用性角度：单机故障率影响面；如果是单库，数据库宕机会导致100%服务不可用，N 库则可以将影响面降低 N 倍。&lt;/p>
&lt;h2 id="分库分表带来的问题">分库分表带来的问题&lt;/h2>
&lt;p>事务性问题：分库可能导致执行一次事务所需的数据分布在不同服务器上，数据库层面无法实现事务性操作，需要更上层业务引入分布式事务操作，难免会给业务带来一定复杂性。&lt;/p>
&lt;p>主键（自增 ID）唯一性问题：在数据库表设计时，经常会使用自增ID作为数据主键，这就导致后续在迁库迁表或者分库分表操作时，会因为主键的变化或者主键不唯一产生冲突。&lt;/p>
&lt;p>跨库多表 join 问题：join 操作往往会给后续的分库分表操作带来各种问题，可能导致数据的死锁。&lt;/p>
&lt;p>跨库聚合查询问题：分库分表会导致常规聚合查询操作，如&lt;code>group by&lt;/code>，&lt;code>order by&lt;/code>等变得异常复杂。&lt;/p>
&lt;h2 id="什么是好的分库分表方案">什么是好的分库分表方案&lt;/h2>
&lt;p>满足业务场景需要：根据业务场景的不同选择不同分库分表方案，比如按照时间划分、按照用户ID划分、按照业务能力划分等。&lt;/p>
&lt;p>方案可持续性：业务数据量级和流量量级未来进一步达到新的量级的时候，我们的分库分表方案可以持续灵活扩容处理。&lt;/p>
&lt;p>最小化数据迁移：扩容时一般涉及到历史数据迁移，其扩容后需要迁移的数据量越小其可持续性越强，理想的迁移前后的状态是（同库同表 &amp;gt; 同表不同库 &amp;gt; 同库不同表 &amp;gt; 不同库不同表）。&lt;/p>
&lt;p>最小化数据偏斜：数据在库表中分配的均衡性，尽可能保证数据流量在各个库表中保持等量分配，避免热点数据对于单库造成压力；&lt;code>最大数据偏斜率=(数据量最大样本-数据量最小样本)/数据量最小样本&lt;/code>，一般来说，如果我们的最大数据偏斜率在5%以内是可以接受的。&lt;/p>
&lt;h2 id="如何分库分表">如何分库分表&lt;/h2>
&lt;h3 id="垂直拆分">垂直拆分&lt;/h3>
&lt;p>垂直拆表：即大表拆小表，将一张表中数据不同“字段”分拆到多张表中，比如商品库将商品基本信息、商品库存、卖家信息等分拆到不同库表中；考虑因素有将不常用的、数据较大、长度较长（比如 text 类型字段）的拆分到“扩展表“，表和表之间通过”主键外键“进行关联；好处是降低表数据规模，提升查询效率，也避免查询时数据量太大造成的“跨页”问题。&lt;/p>
&lt;p>垂直拆库：在垂直拆表的基础上，将一个系统中的不同业务场景进行拆分，比如订单表、用户表、商品表；好处是降低单数据库服务的压力（物理存储、内存、IO等）、降低单机故障的影响面。&lt;/p>
&lt;h3 id="水平拆分">水平拆分&lt;/h3>
&lt;p>将总体数据按照某种维度（时间、用户）等分拆到多个库中或者表中，如订单按照（日期、用户ID、区域）分库分表。&lt;/p>
&lt;p>水平拆表：将数据按照某种维度拆分为多张表，但是由于多张表还是从属于一个库，其降低锁粒度，一定程度提升查询性能，但是仍然会有 IO 性能瓶颈。&lt;/p>
&lt;p>水平拆库：将数据按照某种维度分拆到多个库中，降低单机单库的压力，提升读写性能。&lt;/p></description></item><item><title>如何删除 Docker 镜像，容器和卷</title><link>https://imx.ink/tech/2023/06/25/delete-docker-images-containers-and-volumes/</link><pubDate>Sun, 25 Jun 2023 16:19:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/25/delete-docker-images-containers-and-volumes/</guid><description>&lt;h2 id="如何删除-docker-镜像容器和卷">如何删除 Docker 镜像，容器和卷&lt;/h2>
&lt;p>Docker 本身提供了从命令行清理系统所需的所有工具，可用于释放磁盘空间并通过删除未使用的 Docker 镜像，容器和卷来保持系统的有序性。&lt;/p>
&lt;h2 id="清除所有未使用或悬空的镜像容器卷和网络">清除所有未使用或悬空的镜像，容器，卷和网络&lt;/h2>
&lt;p>Docker 提供了一个命令，可以清理悬空的任何资源（镜像，容器，卷和网络）（与容器无关）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker system prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>要另外删除任何已停止的容器和所有未使用的图像（不只是悬空图像），请将该 -a 标志添加到命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker system prune -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除镜像">删除镜像&lt;/h2>
&lt;p>删除悬空镜像：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 列出悬空镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker images -f dangling&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 删除悬空镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker images purge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 删除所有镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker rmi &lt;span style="color:#66d9ef">$(&lt;/span>docker images -a -q&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除容器">删除容器&lt;/h2>
&lt;p>使用多个过滤器移除容器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果要删除标记为Created的所有容器（运行具有无效命令的容器时可能导致的状态）或Exited，则可以使用两个过滤器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker rm &lt;span style="color:#66d9ef">$(&lt;/span>docker ps -a -f status&lt;span style="color:#f92672">=&lt;/span>exited -f status&lt;span style="color:#f92672">=&lt;/span>created -q&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 停止所有容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker stop &lt;span style="color:#66d9ef">$(&lt;/span>docker ps -a -q&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 删除所有容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker rm &lt;span style="color:#66d9ef">$(&lt;/span>docker ps -a -q&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="删除卷">删除卷&lt;/h2>
&lt;p>仅 Docker 1.9 及更高版本支持。由于卷的位置与容器无关，因此在移除容器时，不会同时自动删除卷；当卷存在且不再连接到任何容器时，它称为悬空卷。&lt;/p></description></item><item><title>Nginx 跨域配置</title><link>https://imx.ink/tech/2023/06/20/nginx-cross-domain-configuration/</link><pubDate>Tue, 20 Jun 2023 15:30:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/20/nginx-cross-domain-configuration/</guid><description>&lt;h2 id="nginx-跨域配置">Nginx 跨域配置&lt;/h2>
&lt;p>同源策略是一个安全策略。同源，指的是协议，域名，端口相同。浏览器处于安全方面的考虑，只允许本域名下的接口交互，不同源的客户端脚本，在没有明确授权的情况下，不能读写对方的资源。&lt;/p>
&lt;p>同源策略主要是基于如下可能的安全隐患：&lt;/p>
&lt;p>1、用户访问 &lt;code>www.mybank.com&lt;/code>，登录并进行网银操作，这时 cookie 等资源都生成并存放在浏览器；
2、用户突然访问一个另一个网站；
3、该网站在页面中，拿到银行的 cookie，比如用户名，登录 token 等，然后发起对 &lt;code>www.mybank.com&lt;/code> 的操作；
4、若此时浏览器不对跨域做限制，并且银行也没有做响应的安全处理的话，那么用户的信息有可能就这么泄露了。&lt;/p>
&lt;p>CORS 是一个 W3C 标准，全称是跨域资源共享（Cross-origin resource sharing）。即从一个域名的网页去请求另一个域名的资源。本质上对于此类请求，只要协议、域名、端口有任何一个的不同，就被当作是跨域，即都被当成不同源。&lt;/p>
&lt;p>通常基于安全考虑，Nginx 启用了同源策略，即限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。&lt;/p>
&lt;p>Nginx跨域配置语法如下：&lt;/p>
&lt;p>1、语法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>add_header name value [always];
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2、配置项释义：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Access-Control-Allow-Origin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>配置 Access-Control-Allow-Origin 为 * 表示服务器可以接受所有的请求源（Origin），即接受所有跨域的请求，也可以指定一个确定的URL。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access-Control-Allow-Headers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>配置 Access-Control-Allow-Headers，代表允许在请求该地址的时候带上指定的请求头，例如：Content-Type，Authorization，使用逗号（,）拼接起来放在双引号（&amp;#34;）中，可根据实际请求类型添加，可防止出现以下错误：Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response。这个错误表示当前请求Content-Type的值不被支持。其实是因为发起了&amp;#34;application/json&amp;#34;的类型请求导致的。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access-Control-Allow-Methods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>配置 Access-Control-Allow-Methods，代表允许使用指定的方法请求该地址，常见的方法有：GET, POST, OPTIONS, PUT, PATCH, DELETE, HEAD。可防止出现以下错误：Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access-Control-Max-Age
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>配置 Access-Control-Max-Age，代表着在 86400 秒之内不用请求该地址的时候 不需要再进行预检请求，也就是跨域缓存。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access-Control-Allow-Credentials &amp;#39;true&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>可选字段，为true表示允许发送Cookie。同时，发送时，必须设置XMLHttpRequest.withCredentials为true才有效，请求若服务器不允许浏览器发送，删除该字段即可。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>return 204
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>给OPTIONS 添加 204 的返回，为了处理在发送POST请求时Nginx依然拒绝访问的错误，发送&amp;#34;预检请求&amp;#34;时，需要用到方法 OPTIONS，所以服务器需要允许该方法。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>对于简单请求，如GET，只需要在HTTP Response后添加Access-Control-Allow-Origin；
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>对于非简单请求，比如POST、PUT、DELETE等，浏览器会分两次应答。第一次preflight（method: OPTIONS），主要验证来源是否合法，并返回允许的Header等，第二次才是真正的HTTP应答。所以服务器必须处理OPTIONS应答。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多的配置示例参考&lt;a href="https://www.cnblogs.com/itzgr/p/13343387.html">链接&lt;/a>。&lt;/p></description></item><item><title>Golang 工具：第三方 http 库 go-resty</title><link>https://imx.ink/tech/2023/06/12/golang-third-party-go-resty/</link><pubDate>Mon, 12 Jun 2023 15:49:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/12/golang-third-party-go-resty/</guid><description>&lt;h2 id="golang-工具第三方-http-库-go-resty">Golang 工具：第三方 http 库 go-resty&lt;/h2>
&lt;p>golang 里的 http 标准库，发起 http 请求时，写法比较繁琐；这里介绍一个好用的第三方 http 库：&lt;a href="https://github.com/go-resty/resty">go-resty&lt;/a> 。&lt;/p>
&lt;p>go-resty 有很多特性：&lt;/p>
&lt;ul>
&lt;li>发起 GET, POST, PUT, DELETE, HEAD, PATCH, OPTIONS, etc. 请求&lt;/li>
&lt;li>简单的链式书写&lt;/li>
&lt;li>自动解析 JSON 和 XML 类型的文档&lt;/li>
&lt;li>上传文件&lt;/li>
&lt;li>重试功能&lt;/li>
&lt;li>客户端测试功能&lt;/li>
&lt;li>Resty client&lt;/li>
&lt;li>Custom Root Certificates and Client Certificates&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>go-resty 更多功能特性请查看文档：&lt;a href="https://github.com/go-resty/resty#features">go-resty features&lt;/a>，本文编写的示例基于 go-resty: v2.3.0。&lt;/p>
&lt;h2 id="简单的-get">简单的 GET&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e6db74">&amp;#34;github.com/go-resty/resty/v2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">client&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">resty&lt;/span>.&lt;span style="color:#a6e22e">New&lt;/span>() &lt;span style="color:#75715e">// 创建一个restry客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">resp&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">R&lt;/span>().&lt;span style="color:#a6e22e">EnableTrace&lt;/span>().&lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;https://httpbin.org/get&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Explore response object&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Response Info:&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Error :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Status Code:&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">StatusCode&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Status :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">Status&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Proto :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">Proto&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Time :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">Time&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Received At:&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">ReceivedAt&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; Body :\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">resp&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Explore trace info&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Request Trace Info:&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">ti&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">resp&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>.&lt;span style="color:#a6e22e">TraceInfo&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; DNSLookup :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">DNSLookup&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; ConnTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">ConnTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; TCPConnTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">TCPConnTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; TLSHandshake :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">TLSHandshake&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; ServerTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">ServerTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; ResponseTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">ResponseTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; TotalTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">TotalTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; IsConnReused :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">IsConnReused&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; IsConnWasIdle :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">IsConnWasIdle&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34; ConnIdleTime :&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ti&lt;/span>.&lt;span style="color:#a6e22e">ConnIdleTime&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// fmt.Println(&amp;#34; RequestAttempt:&amp;#34;, ti.RequestAttempt)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// fmt.Println(&amp;#34; RemoteAddr :&amp;#34;, ti.RemoteAddr.String())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="增强的-get">增强的 GET&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">client&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">resty&lt;/span>.&lt;span style="color:#a6e22e">New&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">resp&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">R&lt;/span>().
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetQueryParams&lt;/span>(&lt;span style="color:#66d9ef">map&lt;/span>[&lt;span style="color:#66d9ef">string&lt;/span>]&lt;span style="color:#66d9ef">string&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;page_no&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;limit&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;sort&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;order&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;asc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;random&amp;#34;&lt;/span>: &lt;span style="color:#a6e22e">strconv&lt;/span>.&lt;span style="color:#a6e22e">FormatInt&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Now&lt;/span>().&lt;span style="color:#a6e22e">Unix&lt;/span>(), &lt;span style="color:#ae81ff">10&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetHeader&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Accept&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetAuthToken&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;BC594900518B4F7EAC75BD37F019E08FBC594900518B4F7EAC75BD37F019E08F&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/search_result&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Request.SetQueryString method&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">resp&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">R&lt;/span>().
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetQueryString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;productId=232&amp;amp;template=fresh-sample&amp;amp;cat=resty&amp;amp;source=google&amp;amp;kw=buy a lot more&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetHeader&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Accept&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetAuthToken&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;BC594900518B4F7EAC75BD37F019E08FBC594900518B4F7EAC75BD37F019E08F&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/show_product&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 解析返回的内容，内容是json解析到struct&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">resp&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">R&lt;/span>().
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SetResult&lt;/span>(&lt;span style="color:#a6e22e">result&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ForceContentType&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;application/json&amp;#34;&lt;/span>).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;v2/alpine/mainfestes/latest&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更多用法示例参考&lt;a href="https://github.com/go-resty/resty#usage">链接&lt;/a>。&lt;/p></description></item><item><title>Docker 部署 Typecho</title><link>https://imx.ink/tech/2023/06/09/docker-install-typecho/</link><pubDate>Fri, 09 Jun 2023 17:02:00 +0800</pubDate><guid>https://imx.ink/tech/2023/06/09/docker-install-typecho/</guid><description>&lt;h2 id="docker-部署-typecho">Docker 部署 Typecho&lt;/h2>
&lt;p>博客搭建环境为腾讯云服务器资源，使用 Docker 容器部署 Typecho 服务，添加 Https 支持和常用的样式修改。&lt;/p>
&lt;h2 id="安装-docker-并配置镜像加速源">安装 Docker 并配置镜像加速源&lt;/h2>
&lt;p>参考&lt;a href="https://cloud.tencent.com/document/product/213/46000">搭建 Docker&lt;/a> 和&lt;a href="https://cloud.tencent.com/document/product/213/8623">腾讯云软件源加速软件包下载和更新&lt;/a>安装部署；&lt;/p>
&lt;h2 id="安装-typecho-服务">安装 Typecho 服务&lt;/h2>
&lt;p>使用 &lt;a href="https://hub.docker.com/r/80x86/typecho">80x86/typecho&lt;/a> 开源镜像，注意 &lt;code>/srv/http/typecho&lt;/code> 为 &lt;code>typecho&lt;/code> 解压安装的路径，下载地址参考&lt;a href="https://typecho.org/download">链接&lt;/a>； 安装执行命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker run -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--name&lt;span style="color:#f92672">=&lt;/span>typecho-blog &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--restart always &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--mount type&lt;span style="color:#f92672">=&lt;/span>tmpfs,destination&lt;span style="color:#f92672">=&lt;/span>/tmp &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /srv/http/typecho:/data &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e PHP_TZ&lt;span style="color:#f92672">=&lt;/span>Asia/Shanghai &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e PHP_MAX_EXECUTION_TIME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">600&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-p 80:80 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-p 443:443 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>80x86/typecho:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="docker-https-开启">Docker HTTPS 开启&lt;/h2>
&lt;p>腾讯云官网申请免费证书：&lt;a href="https://cloud.tencent.com/document/product/400/6814">免费 SSL 证书申请流程&lt;/a>，下载 &lt;code>Nginx&lt;/code> 证书，得到 &lt;code>xxxx.pem&lt;/code> 和 &lt;code>xxxx.key&lt;/code> 文件，上传至 &lt;code>/srv/http/typecho/crt&lt;/code> 文件夹中，需要先新建此文件夹。&lt;/p>
&lt;p>进入 Docker 容器的 Nginx 配置目录：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker exec -it typecho /bin/sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd /etc/nginx/sites-enabled
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改默认 server 配置 &lt;code>default&lt;/code> 文件为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen 443 ssl; ## listen for ipv4; this line is default and implied
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen [::]:443 ssl default ipv6only=on; ## listen for ipv6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> root /app;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> index index.php index.html index.htm;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_certificate &amp;#34;/data/crt/xxxx.com.pem&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_certificate_key &amp;#34;/data/crt/xxxx.com.key&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_session_cache shared:SSL:1m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_session_timeout 10m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!aNULL:!MD5:!ADH:!RC4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssl_prefer_server_ciphers on;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # 其余不改动
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>新建 &lt;code>redirect&lt;/code> 文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen 80;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name yoursite.com www.yoursite.com;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rewrite ^(.*)$ https://$host$1 permanent;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重启 Nginx 服务：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ nginx -s reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="博客样式修改">博客样式修改&lt;/h2>
&lt;p>适用于 &lt;code>maupassant&lt;/code> 主题，下载参考&lt;a href="https://github.com/pagecho/maupassant">链接&lt;/a>，部分修改需要清空缓存重新加载生效。&lt;/p>
&lt;h3 id="文章日期修改">文章日期修改&lt;/h3>
&lt;p>主要修改了首页标题下日期，以及边栏归档日期的显示。&lt;/p>
&lt;p>打开 &lt;code>index.php&lt;/code> 文件，改为 &lt;code>date ('Y 年 n 月 j 日')&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">date&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-meta&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;date(&amp;#39;Y 年 n 月 j 日&amp;#39;); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">date&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>sidebar.php&lt;/code> 文件, 改为 &lt;code>type=month&amp;amp;format=Y 年 m 月&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">section&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;widget&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h3&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;widget-title&amp;#34;&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php _e(&amp;#39;归档&amp;#39;); ?&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#f92672">h3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">ul&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;widget-list&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;widget(&amp;#39;Widget_Contents_Post_Date&amp;#39;, &amp;#39;type=month&amp;amp;format=Y年m月&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> -&amp;gt;parse(&amp;#39;&amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;{permalink}&amp;#34;&amp;gt;{date}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&amp;#39;); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">section&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="链接颜色修改">链接颜色修改&lt;/h3>
&lt;p>打开 &lt;code>style.css&lt;/code> 文件, 将 &lt;code>color&lt;/code> 改为 &lt;code>#C83C23&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">post-content&lt;/span> &lt;span style="color:#f92672">a&lt;/span>&lt;span style="color:#f92672">,&lt;/span> .&lt;span style="color:#a6e22e">comment-content&lt;/span> &lt;span style="color:#f92672">a&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-bottom&lt;/span>:&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ddd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#ae81ff">#C83C23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="代码高亮修改">代码高亮修改&lt;/h3>
&lt;p>打开 &lt;code>footer.php&lt;/code> 文件, 引入 &lt;code>highlight.js&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.5.0/build/highlight.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">hljs&lt;/span>.&lt;span style="color:#a6e22e">initHighlightingOnLoad&lt;/span>();&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>header.php&lt;/code>, 引入 &lt;code>css&lt;/code> 样式文件, 可以自行在 &lt;code>highlight.js&lt;/code> 官网选择：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;stylesheet&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;//cdn.jsdelivr.net/gh/highlightjs/cdn-release@10.5.0/build/styles/default.min.css&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="中西文自动加空格">中西文自动加空格&lt;/h3>
&lt;p>打开 &lt;code>footer.php&lt;/code> 文件, 在 &lt;code>\&amp;lt;body&amp;gt;&lt;/code> 标签中加入下面代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">pangu&lt;/span>.&lt;span style="color:#a6e22e">spacing&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;當你凝視著bug，bug也凝視著你&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// text = &amp;#39;當你凝視著 bug，bug 也凝視著你&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pangu&lt;/span>.&lt;span style="color:#a6e22e">spacingElementById&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;main&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pangu&lt;/span>.&lt;span style="color:#a6e22e">spacingElementByClassName&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;comment&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">pangu&lt;/span>.&lt;span style="color:#a6e22e">spacingElementByTagName&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;p&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;DOMContentLoaded&amp;#39;&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// listen to any DOM change and automatically perform spacing via MutationObserver()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">pangu&lt;/span>.&lt;span style="color:#a6e22e">autoSpacingPage&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="文章页添加翻页">文章页添加翻页&lt;/h3>
&lt;p>打开 &lt;code>post.php&lt;/code> 文件, 在 &lt;code>\&amp;lt;/article&amp;gt;&lt;/code> 标签后添加下面代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-nav&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-nav-pre&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;float:left;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;thePrev(&amp;#39;上一篇 : %s&amp;#39;, &amp;#39;&amp;#39;); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-nav-next&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;float:right;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;theNext(&amp;#39;下一篇 : %s&amp;#39;, &amp;#39;&amp;#39;); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>style.css&lt;/code> 添加下面代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 文章翻页 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">post-nav&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">overflow&lt;/span>: &lt;span style="color:#66d9ef">hidden&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin&lt;/span>: &lt;span style="color:#ae81ff">35&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding-top&lt;/span>: &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-top&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ddd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">post-nav-pre&lt;/span> &lt;span style="color:#f92672">a&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>:&lt;span style="color:#ae81ff">#C83C23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">post-nav-next&lt;/span> &lt;span style="color:#f92672">a&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>:&lt;span style="color:#ae81ff">#C83C23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加版权声明">添加版权声明&lt;/h3>
&lt;p>打开 &lt;code>post.php&lt;/code>, 在 &lt;code>\&amp;lt;/article&amp;gt;&lt;/code> 标签后, 添加版权声明代码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">copyright&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;本文标题：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;title(); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-author&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;文章作者：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;author(); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-date&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;发布时间：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;date(&amp;#39;Y 年 m 月 d 日&amp;#39;); ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-update&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;更新时间：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php echo date(&amp;#39;Y 年 m 月 d 日&amp;#39;, $this-&amp;gt;modified);?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-url&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;原始链接：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;?php $this-&amp;gt;permalink() ?&amp;gt;&amp;#34;&lt;/span>&amp;gt;&lt;span style="color:#75715e">&amp;lt;?php $this-&amp;gt;permalink() ?&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">cp-cc&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;许可协议：&amp;lt;/&lt;span style="color:#f92672">strong&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://creativecommons.org/licenses/by/4.0/deed.zh&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">target&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;_blank&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;noopener noreferrer nofollow&amp;#34;&lt;/span>&amp;gt;署名 4.0 国际（CC BY 4.0）&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;，转载请保留原文链接和作者。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>style.css&lt;/code>, 添加版权声明样式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 版权声明 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">copyright&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">background-color&lt;/span>: &lt;span style="color:#ae81ff">#f0f0f0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding&lt;/span>: &lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">line-height&lt;/span>: &lt;span style="color:#ae81ff">1.6&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">cp-url&lt;/span> &lt;span style="color:#f92672">a&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>:&lt;span style="color:#ae81ff">#C83C23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-bottom&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ddd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">cp-cc&lt;/span> &lt;span style="color:#f92672">a&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#ae81ff">#C83C23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-bottom&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ddd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加打赏功能">添加打赏功能&lt;/h3>
&lt;p>打开 &lt;code>post.php&lt;/code>, 添加下面代码在合适位置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;padding: 10px 0; margin: 20px auto; width: 100%; font-size:16px; text-align: center;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rewardButton&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">disable&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;enable&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">onclick&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;var qr = document.getElementById(&amp;#39;QR&amp;#39;); if (qr.style.display === &amp;#39;none&amp;#39;) {qr.style.display=&amp;#39;block&amp;#39;;} else {qr.style.display=&amp;#39;none&amp;#39;}&amp;#34;&lt;/span>&amp;gt; &amp;lt;&lt;span style="color:#f92672">span&lt;/span>&amp;gt;打赏&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt; &amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;color:#999;font-size:14px;&amp;#34;&lt;/span>&amp;gt;多寡随意，丰俭由人&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;QR&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;display: none;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;wechat&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;display: inline-block&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fancybox&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;group&amp;#34;&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;wechat_qr&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/yourpath/wechatpay.png&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;WeChat Pay&amp;#34;&lt;/span> /&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt; 微信打赏 &amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;alipay&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;display: inline-block&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fancybox&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;group&amp;#34;&lt;/span>&amp;gt;&amp;lt;&lt;span style="color:#f92672">img&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;alipay_qr&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">src&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/yourpath/alipay.png&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">alt&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Alipay&amp;#34;&lt;/span> /&amp;gt;&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt; 支付宝打赏 &amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>style.css&lt;/code>, 添加打赏按钮样式文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 文章打赏 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#QR {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding-top&lt;/span>: &lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border&lt;/span>: &lt;span style="color:#ae81ff">#f05050&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#QR &lt;span style="color:#f92672">a&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#QR &lt;span style="color:#f92672">img&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">width&lt;/span>: &lt;span style="color:#ae81ff">180&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">max-width&lt;/span>: &lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#66d9ef">%&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">inline-block&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin&lt;/span>: &lt;span style="color:#ae81ff">.8&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#rewardButton {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#f05050&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">line-height&lt;/span>: &lt;span style="color:#ae81ff">36&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">text-align&lt;/span>: &lt;span style="color:#66d9ef">center&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">height&lt;/span>: &lt;span style="color:#ae81ff">36&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>: &lt;span style="color:#66d9ef">block&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-radius&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-webkit-&lt;/span>&lt;span style="color:#66d9ef">transition-duration&lt;/span>: &lt;span style="color:#ae81ff">.4&lt;/span>&lt;span style="color:#66d9ef">s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">transition-duration&lt;/span>: &lt;span style="color:#ae81ff">.4&lt;/span>&lt;span style="color:#66d9ef">s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">background-color&lt;/span>: &lt;span style="color:#ae81ff">#f05050&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#ae81ff">#fff&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#rewardButton:&lt;span style="color:#a6e22e">hover&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#ae81ff">#f77b83&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-color&lt;/span>: &lt;span style="color:#ae81ff">#f77b83&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">outline-style&lt;/span>: &lt;span style="color:#66d9ef">none&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#rewardButton {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">background-color&lt;/span>: &lt;span style="color:#ae81ff">#f05050&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#66d9ef">white&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-radius&lt;/span>: &lt;span style="color:#ae81ff">50&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">cursor&lt;/span>: &lt;span style="color:#66d9ef">pointer&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="图片--引用样式优化">图片 &amp;amp; 引用样式优化&lt;/h3>
&lt;p>文章中的图片之前容易跟背景色融合，于是加上 border 和圆角处理，加了二层阴影。&lt;/p>
&lt;p>打开 &lt;code>style.css&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#a6e22e">post-content&lt;/span> &lt;span style="color:#f92672">img&lt;/span>&lt;span style="color:#f92672">,&lt;/span> .&lt;span style="color:#a6e22e">comment-content&lt;/span> &lt;span style="color:#f92672">img&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">max-width&lt;/span>:&lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#66d9ef">%&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin-left&lt;/span>: &lt;span style="color:#66d9ef">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin-right&lt;/span>:&lt;span style="color:#66d9ef">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">display&lt;/span>:&lt;span style="color:#66d9ef">block&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#f0f0f0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-radius&lt;/span>: &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">box-shadow&lt;/span>: &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> rgba(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0.1&lt;/span>), &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> rgba(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0.08&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开 &lt;code>style.css&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">blockquote&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">margin&lt;/span>: &lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">padding&lt;/span>: &lt;span style="color:#ae81ff">0.5&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span> &lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* padding-left: 1.5em; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">border-left&lt;/span>: &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#66d9ef">px&lt;/span> &lt;span style="color:#66d9ef">solid&lt;/span> &lt;span style="color:#ae81ff">#ddd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">color&lt;/span>: &lt;span style="color:#ae81ff">#777&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">font-size&lt;/span>: &lt;span style="color:#ae81ff">0.82&lt;/span>&lt;span style="color:#66d9ef">em&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">background-color&lt;/span>: &lt;span style="color:#ae81ff">#f9f9f9&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="配置网站浏览器图标">配置网站浏览器图标&lt;/h3>
&lt;p>制作 ico 图片文件，可以参考&lt;a href="https://www.bitbug.net/">链接&lt;/a>，文件下载到 &lt;code>typecho/themes/{theme_name}/favicon.ico&lt;/code> 路径。&lt;/p>
&lt;p>在 &lt;code>header.php&lt;/code> 的 &lt;code>&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code> 标签之间添加：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;shortcut icon&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;?php $this-&amp;gt;options-&amp;gt;themeUrl(&amp;#39;favicon.ico&amp;#39;); ?&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;image/x-icon&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span># 如果有下面这一行就删掉
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">link&lt;/span> &lt;span style="color:#a6e22e">data-n-head&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">rel&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;icon&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;image/x-icon&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/favicon.ico&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="主页只显示摘要方法">主页只显示摘要方法&lt;/h3>
&lt;p>在编写文章时在摘要和全文中间使用分隔符 `&lt;/p></description></item></channel></rss>